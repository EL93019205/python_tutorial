#############
# 出力しよう#
#############
1 <class 'int'>
Mike <class 'str'>
True <class 'bool'>
Hi,Mike
#################
# 文字列を扱おう#
#################
hello
hello
I don't know
I don't know
say "I don't know"
say "I don't know"
hello.
How are you?
C:\name\name
line1
line2
line3
Hi.Hi.Hi.Mike.
Python
aaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbb
##########################################
# 文字列のインデックスとスライスを扱おう #
##########################################
p
y
n
py
tho
py
py
thon
jython
6
##############################
# 文字列のメソッドを扱おう！ #
##############################
My name is Mike. Hi Mike.
True
False
11
20
M
2
My name is mike. hi mike.
My Name Is Mike. Hi Mike.
MY NAME IS MIKE. HI MIKE.
my name is mike. hi mike.
My name is Nancy. Hi Nancy.
######################
# 文字を代入しよう！ #
######################
a is a
a is test
a is 1 2 3
a is 1 2 3
a is 3 2 1
My name is Jun Sakai
My name is Jun Sakai. Watashi ha Sakai Jun
My name is Jun Sakai. Watashi ha Sakai Jun
1
1
<class 'str'>
3.14
############################
# f-stringを使ってみよう！ #
############################
a is a
a is 1,2,3
a is 3,2,1
My name is JunSakai. Watashi ha Sakai Jun
############################
# リスト型を使ってみよう！ #
############################
1
20
2
1
[1, 20]
[1, 20]
[4, 50, 2, 1, 2]
[4, 50, 2]
[1, 20, 4, 50, 2, 1, 2]
7
<class 'list'>
['a', 'b', 'c', 'd', 'e', 'f', 'g']
[2, 4, 6, 8]
[10, 9, 8, 7, 6, 5, 4, 3, 2, 1]
[['a', 'b', 'c'], [1, 2, 3]]
['a', 'b', 'c']
[1, 2, 3]
b
3
##########################
# リストの操作をしよう！ #
##########################
['a', 'b', 'c', 'd', 'e', 'f', 'g']
['x', 'b', 'c', 'd', 'e', 'f', 'g']
[]
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 100]
[200, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 100]
[200, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
[1, 2, 2, 3]
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
##############################
# リストのメソッドを扱おう！ #
##############################
7
2
[1, 1, 2, 2, 3, 3, 4, 5]
[5, 4, 3, 3, 2, 2, 1, 1]
[1, 1, 2, 2, 3, 3, 4, 5]
['My', 'name', 'is', 'Mike.']
My###name###is###Mike.
##########################
# リストをコピーしよう！ #
##########################
j= [100, 2, 3, 4, 5]
i= [100, 2, 3, 4, 5]
<class 'list'>
<class 'list'>
x= [1, 2, 3, 4, 5]
y= [100, 2, 3, 4, 5]
4374195136
4374194656
5
20
140673055342400
140673055342400
['p', 'b']
['p', 'b']
################################
# リストはどのような時に使うか #
################################
True
False
True
##########################
# タプル型を扱ってみよう #
##########################
(1, 2, 3, 4, 1, 2)
<class 'tuple'>
1
(3, 4, 1)
0
4
2
(1, 2, 3, 4, 1, 2)
(1, 2, 3, 4, 1, 2)
(1, 2, 3, 4, 1, 2)
([100, 2, 3], [4, 5, 6])
<class 'tuple'>
(1, 2, 3)
<class 'tuple'>
<class 'tuple'>
<class 'int'>
<class 'str'>
<class 'tuple'>
(1, 2, 3, 4, 5, 6)
(1, 4, 5, 6)
########################################
# タプルのアンパッキングを扱ってみよう #
########################################
(10, 20)
10 20
10 20
0 100
20 10
100 200
200 100
##################
# タプルの使い所 #
##################
('A', 'B', 'C')
['A', 'B']
########################
# 辞書型を扱ってみよう #
########################
{'x': 10, 'y': 20}
<class 'dict'>
{'x': 100, 'y': 20}
{'x': 'XXXX', 'y': 20}
{'x': 'XXXX', 'y': 20, 'z': 200}
{'x': 'XXXX', 'y': 20, 'z': 200, 1: 10000}
{'a': 10, 'b': 20}
{'a': 10, 'b': 20}
dict_keys(['x', 'y'])
dict_values([10, 20])
{'x': 1000, 'y': 20, 'j': 500}
{'x': 1000, 'j': 500}
1000
1000
None
None
<class 'NoneType'>
1000
1000
{'y': 20, 'j': 500}
{'j': 500}
{}
True
False
{'a': 1000}
{'a': 1000}
{'a': 1}
{'a': 1000}
100
########################
# 集合型を扱ってみよう #
########################
{1, 2, 3, 4, 5, 6}
<class 'set'>
{2, 3, 6, 7}
{1, 4, 5}
{7}
{2, 3, 6}
{1, 2, 3, 4, 5, 6, 7}
{1, 4, 5, 7}
{1, 2, 3, 4, 5}
{1, 2, 3, 4, 5, 6}
{1, 2, 3, 4, 5, 6}
{1, 2, 3, 4, 5}
set()
<class 'dict'>
{}
{'D'}
{'apple', 'banana'}
####################
# コメントを扱おう #
####################

XXXXX
XXXXX
#########################
# 1行が長い場合を扱おう #
#########################

aaaaaaaaaaabbbbbbbbbbbbbb
######################
# if文を扱ってみよう #
######################

100000
a is positive
b is positive
##################################
# 比較演算子と論理演算子を扱おう #
##################################
False
True
True
False
True
False
False
True
###################
# InとNotを扱おう #
###################
in
not in
not equal
not equal
################################
# 値が入っていない判定を行おう #
################################
OK
####################
# Noneを判定しよう #
####################
None
<class 'NoneType'>
True
True
################################
# while,continue,breakを扱おう #
################################
0
1
3
4
########################
# while else文を扱おう #
########################
0
#####################
# input関数を扱おう #
#####################
##############################
# for,break,continueを扱おう #
##############################
1
2
3
4
5
a
b
c
d
e
My
is
###################
# for elseを扱おう#
###################
apple
stop eating
